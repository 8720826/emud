@page
@model Emprise.Admin.Pages.ScriptCommand.EditModel
@{
    ViewData["Title"] = "分支管理";
    ViewData["MenuGroup"] = MenuGroupEnum.System;
}

@section CssJs{

    <link rel="stylesheet" type="text/css" href="~/simditor/styles/simditor.css" />

    <script type="text/javascript" src="~/simditor/scripts/jquery.min.js"></script>
    <script type="text/javascript" src="~/simditor/scripts/module.js"></script>
    <script type="text/javascript" src="~/simditor/scripts/hotkeys.js"></script>
    <script type="text/javascript" src="~/simditor/scripts/simditor.js"></script>
    <script type="text/javascript" src="~/simditor/scripts/beautify-html.js"></script>
    <script type="text/javascript" src="~/simditor/scripts/simditor-html.js"></script>

    <link rel="stylesheet" href="~/simditor/styles/simditor-html.css" media="screen" charset="utf-8" />

    <script type="text/javascript" src="~/js/template-web.js"></script>
    <style>
        .empty {
            border: red solid 1px;
        }
    </style>
}
<div class="admin-content-body">
    <div class="am-cf am-padding">
        <div class="am-fl am-cf"><strong class="am-text-primary am-text-lg">分支管理</strong> / <small>修改分支</small></div>
    </div>

    <div class="am-margin">
        <form class="am-form" method="post" onsubmit="return check()">
            <div class="am-g">
                <p></p>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="am-fade  am-in am-active">
                    <div class="am-g am-margin-top">
                        <div class="am-u-sm-2 am-text-right">
                            <label asp-for="ScriptCommand.Name" class="control-label"></label>
                        </div>
                        <div class="am-u-sm-4">
                            <input type="text" class="am-input-sm" asp-for="ScriptCommand.Name">
                            <span asp-validation-for="ScriptCommand.Name" class="text-danger"></span>
                        </div>
                        <div class="am-u-sm-6"></div>
                    </div>


                    <div class="am-g am-margin-top">
                        <div class="am-u-sm-2 am-text-right">
                            <label asp-for="ScriptCommand.IsEntry" class="control-label"></label>
                        </div>
                        <div class="am-u-sm-2">
                            <label class="am-btn am-btn-default am-btn-xs">
                                <input type="checkbox" asp-for="ScriptCommand.IsEntry"> 是否入口
                            </label>

                        </div>
                        <div class="am-u-sm-6">入口将显示在npc资料页面</div>
                    </div>

                    <div class="am-g am-margin-top">
                        <div class="am-u-sm-2 am-text-right">
                            <label asp-for="ScriptCommand.SortId" class="control-label"></label>
                        </div>
                        <div class="am-u-sm-4">
                            <input type="text" class="am-input-sm" asp-for="ScriptCommand.SortId" value="99">
                            <span asp-validation-for="ScriptCommand.SortId" class="text-danger"></span>
                        </div>
                        <div class="am-u-sm-6"></div>
                    </div>


                    <div class="am-g am-margin-top-sm">
                        <div class="am-u-sm-2 am-text-right">
                            <label asp-for="ScriptCommand.CaseIf" class="control-label"></label>
                        </div>
                        <div class="am-u-sm-10" id="caseIf">
                            <input type="hidden" asp-for="ScriptCommand.CaseIf">
                            <div class="am-form-inline am-form-group">
                                <select class="am-input-sm am-form-field conditions" style="width: 100px;">
                                    <option value="">请选择</option>
                                    @foreach (var item in Enum.GetValues(typeof(ConditionTypeEnum)))
                                    {
                                        <option value="@(item.ToString())">@(item.ToString())</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="am-u-sm-4"></div>
                    </div>

                    <div class="am-g am-margin-top-sm">
                        <div class="am-u-sm-2 am-text-right">
                            <label asp-for="ScriptCommand.CaseThen" class="control-label"></label>
                        </div>
                        <div class="am-u-sm-10" id="caseThen">
                            <input type="hidden" asp-for="ScriptCommand.CaseThen">
                            <div class="am-form-inline am-form-group">
                                <select class="am-input-sm am-form-field commands" style="width: 100px;">
                                    <option value="">请选择</option>
                                    @foreach (var item in Enum.GetValues(typeof(CommandTypeEnum)))
                                    {
                                        <option value="@(item.ToString())">@(item.ToString())</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="am-u-sm-4"></div>
                    </div>

                    <div class="am-g am-margin-top-sm">
                        <div class="am-u-sm-2 am-text-right">
                            <label asp-for="ScriptCommand.CaseElse" class="control-label"></label>
                        </div>
                        <div class="am-u-sm-10" id="caseElse">
                            <input type="hidden" asp-for="ScriptCommand.CaseElse">
                            <div class="am-form-inline am-form-group">
                                <select class="am-input-sm am-form-field commands" style="width: 100px;">
                                    <option value="">请选择</option>
                                    @foreach (var item in Enum.GetValues(typeof(CommandTypeEnum)))
                                    {
                                        <option value="@(item.ToString())">@(item.ToString())</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="am-u-sm-4"></div>
                    </div>


                    <div class="footer am-margin-top-sm">
                        <div class="am-u-sm-2 am-text-right">

                        </div>
                        <div class="am-u-sm-10">
                            <button type="submit" class="am-btn am-btn-primary am-btn-xs">提交保存</button>
                            <a href="@(Model.UrlReferer)" class="am-btn am-btn-default am-btn-xs backup">返回</a>
                            <div class="am-inline-block am-padding-left">
                                <p style="color:#ff0000">@(Model.ErrorMessage)</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="am-margin">
                <input type="hidden" asp-for="UrlReferer">
            </div>
        </form>
    </div>
</div>


<partial name="_ScriptTemplate.cshtml" />


@section Scripts {

    <script type="text/javascript">
        var conditions = @Html.Raw(JsonConvert.SerializeObject(Model.Conditions));
        var fields = @Html.Raw(JsonConvert.SerializeObject(Model.Fields));
        var relations = @Html.Raw(JsonConvert.SerializeObject(Model.Relations));
        var events = @Html.Raw(JsonConvert.SerializeObject(Model.Events));
        var commands = @Html.Raw(JsonConvert.SerializeObject(Model.Commands));
        var activities = @Html.Raw(JsonConvert.SerializeObject(Model.Activities));

        var caseIfs = @Html.Raw(JsonConvert.SerializeObject(Model.CaseIfs));
        var caseThens = @Html.Raw(JsonConvert.SerializeObject(Model.CaseThens));
        var caseElses = @Html.Raw(JsonConvert.SerializeObject(Model.CaseElses));


        $(function () {
            $("input[type=checkbox]:checked").each(function () {
                $(this).parent(".am-btn").addClass("am-active");
            });





            $(document).on("change", ".conditions", function () {
                var condition = $(this).val();
                console.log("condition=" + condition);
                $(this).nextAll("select").remove();
                $(this).nextAll("input").remove();

                if (condition == "") {
                    return;
                }

                var data = { fields: fields, relations: relations, activities: activities };

                if ($("#condition-" + condition).length>0) {
                    $(this).after(template("condition-" + condition, data));
                }

                var hasValue = true;
                $(this).parent().parent().find(".conditions").each(function () { if ($(this).val() == "") { hasValue = false; return; } });

                if (hasValue) {
                    var conditionDiv = $(".conditions").eq(0).clone();
                    var div = $("<div class='am-form-inline am-form-group'></div>");
                    $(div).append(conditionDiv);

                    $(this).parent().parent().find(".conditions:last").parent().after($(div));
                }

            });

            $(document).on("change", ".commands", function () {
                var command = $(this).val();
                console.log("command=" + command);
                $(this).nextAll("select").remove();
                $(this).nextAll("input").remove();

                if (command == "") {
                    return;
                }

                var data = { fields: fields, relations: relations };

                if ($("#command-" + command).length>0) {
                    $(this).after(template("command-" + command, data));
                }

                var hasValue = true;
                $(this).parent().parent().find(".commands").each(function () { if ($(this).val() == "") { hasValue = false; return; } });

                if (hasValue) {
                    var commandDiv = $(".commands").eq(0).clone();
                    var div = $("<div class='am-form-inline am-form-group'></div>");
                    $(div).append(commandDiv);

                    $(this).parent().parent().find(".commands:last").parent().after($(div));
                }
            });



            $.each(caseIfs, function (i, item) {
                $("#caseIf").find(".conditions").each(function () {
                    if ($(this).val() == "") {
                        $(this).val(item.condition).trigger("change");
                        $(this).parent().children(".attr").each(function () {
                            var $this = $(this);
                            var attr = $(this).attr("attr");

                            $.each(item.attrs, function (j, data) {
                                console.log("data.attr=" + data.attr);
                                if (data.attr == attr) {
                                    $this.val(data.val);
                                }
                            });
                        });
                        return false;
                    }
                });
            });

            $.each(caseThens, function (i, item) {
                $("#caseThen").find(".commands").each(function () {
                    if ($(this).val() == "") {
                        $(this).val(item.command).trigger("change");
                        $(this).parent().children(".attr").each(function () {
                            var $this = $(this);
                            var attr = $(this).attr("attr");

                            $.each(item.attrs, function (j, data) {
                                console.log("data.attr=" + data.attr);
                                if (data.attr == attr) {
                                    $this.val(data.val);
                                }
                            });
                        });
                        return false;
                    }
                });
            });


            $.each(caseElses, function (i, item) {
                $("#caseElse").find(".commands").each(function () {
                    if ($(this).val() == "") {
                        $(this).val(item.command).trigger("change");
                        $(this).parent().children(".attr").each(function () {
                            var $this = $(this);
                            var attr = $(this).attr("attr");

                            $.each(item.attrs, function (j, data) {
                                console.log("data.attr=" + data.attr);
                                if (data.attr == attr) {
                                    $this.val(data.val);
                                }
                            });
                        });
                        return false;
                    }
                });
            });

        });


        function check() {
            var hasEmptyValue = false;
            caseIfs = [];
            $("#caseIf").find(".am-form-group").each(function () {
                var condition = $(this).children(".conditions").val();
                if (condition == "") {
                    return true;
                }
                console.log("condition=" + condition);

                var caseIf = {
                    condition: condition,
                    attrs: []
                };
                $(this).children(".attr").each(function () {
                    var val = $(this).val();
                    var attr = $(this).attr("attr");


                    if (val == "") {
                        $(this).css("border", "1px solid red");;
                        hasEmptyValue = true;
                    } else {
                        $(this).css("border", "1px solid #ccc");;
                    }

                    caseIf.attrs.push({ attr: attr, val: val });
                });

                caseIfs.push(caseIf);

                console.log("caseIf=" + JSON.stringify(caseIf));
            });
            var caseIfData = JSON.stringify(caseIfs);
            $("#ScriptCommand_CaseIf").val(caseIfData);

            caseThens = [];
            $("#caseThen").find(".am-form-group").each(function () {
                var command = $(this).children(".commands").val();
                if (command == "") {
                    return true;
                }
                console.log("command=" + command);

                var caseThen = {
                    command: command,
                    attrs: []
                };
                $(this).children(".attr").each(function () {
                    var val = $(this).val();
                    var attr = $(this).attr("attr");

                    if (val == "") {
                        $(this).css("border", "1px solid red");;
                        hasEmptyValue = true;
                    } else {
                        $(this).css("border", "1px solid #ccc");;
                    }

                    caseThen.attrs.push({ attr: attr, val: val });
                });

                caseThens.push(caseThen);

                console.log("caseThen=" + JSON.stringify(caseThen));

            });
            var caseThenData = JSON.stringify(caseThens);
            $("#ScriptCommand_CaseThen").val(caseThenData);


            caseElses = [];
            $("#caseElse").find(".am-form-group").each(function () {
                var command = $(this).children(".commands").val();
                if (command == "") {
                    return true;
                }
                console.log("command=" + command);

                var caseElse = {
                    command: command,
                    attrs: []
                };
                $(this).children(".attr").each(function () {
                    var val = $(this).val();
                    var attr = $(this).attr("attr");

                    if (val == "") {
                        $(this).css("border", "1px solid red");;
                        hasEmptyValue = true;
                    } else {
                        $(this).css("border", "1px solid #ccc");;
                    }

                    caseElse.attrs.push({ attr: attr, val: val });
                });

                caseElses.push(caseElse);

                console.log("caseElse=" + JSON.stringify(caseElse));


            });
            var caseThenData = JSON.stringify(caseElses);
            $("#ScriptCommand_CaseElse").val(caseThenData);

            if (hasEmptyValue) {
                return false;
            }
            return true;
        }
    </script>
}
